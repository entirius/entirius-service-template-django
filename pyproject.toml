[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "entirius-service-template-django"
version = "0.1.0"
description = "Entirius Template Django Service - Template for creating new Django-based services"
authors = [
    {name = "Zolv", email = "174021039+zolvio@users.noreply.github.com"},
]
readme = "README.md"
requires-python = ">=3.11"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Mozilla Public License 2.0 (MPL 2.0)",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Framework :: Django",
    "Framework :: Django :: 5.0",
]
dependencies = [
    "django>=5.2.0",
    "djangorestframework>=3.16.0",
    "drf-spectacular>=0.28.0",
    "pydantic>=2.11.0",
    "celery>=5.5.0",
    "redis>=6.4.0",
    "psycopg2-binary>=2.9.0",
    "python-decouple>=3.8",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-django>=4.8.0",
    "pytest-cov>=5.0.0",
    "pytest-xdist>=3.6.0",
    "ruff>=0.7.0",
    "mypy>=1.11.0",
    "django-stubs>=5.1.0",
    "djangorestframework-stubs>=3.15.0",
    "types-redis>=4.6.0",
    "types-requests>=2.32.0",
]

[project.urls]
"Homepage" = "https://github.com/entirius/entirius"
"Bug Tracker" = "https://github.com/entirius/entirius/issues"
"Documentation" = "https://docs.entirius.com"

[tool.hatch.build.targets.wheel]
packages = ["apps", "main"]

[tool.ruff]
line-length = 88
target-version = "py311"
src = ["apps", "main"]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # Pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "DJ",  # flake8-django
    "S",   # flake8-bandit (security)
]
ignore = [
    "E501",  # Line too long (handled by formatter)
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # Allow unused imports in __init__.py
"main/settings*.py" = ["F405", "F403"]  # Django settings imports
"*/migrations/*.py" = ["E501"]  # Long lines in migrations

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint.isort]
known-first-party = ["apps", "main"]

[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
ignore_missing_imports = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
plugins = ["mypy_django_plugin.main"]

[tool.django-stubs]
django_settings_module = "main.settings"

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "main.settings_local"
python_files = ["tests.py", "test_*.py", "*_tests.py"]
addopts = "--reuse-db"
testpaths = ["apps"]

[tool.coverage.run]
source = ["apps", "main"]
omit = [
    "*/migrations/*",
    "*/tests/*",
    "*/venv/*",
    "*/env/*",
    "manage.py",
    "main/wsgi.py",
    "main/asgi.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
]

[dependency-groups]
dev = [
    "django-stubs>=5.2.2",
    "djangorestframework-stubs>=3.16.2",
    "mypy>=1.17.1",
    "pytest>=8.4.1",
    "pytest-cov>=6.2.1",
    "pytest-django>=4.11.1",
    "pytest-xdist>=3.8.0",
    "ruff>=0.12.9",
    "types-redis>=4.6.0.20241004",
    "types-requests>=2.32.4.20250809",
]
